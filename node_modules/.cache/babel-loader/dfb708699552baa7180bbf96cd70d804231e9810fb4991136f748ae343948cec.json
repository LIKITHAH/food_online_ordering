{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MINI_PROJECT_GANESHA\\\\food\\\\src\\\\pages\\\\Home\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useReducer } from 'react';\nimport { getAll, getAllByTag, getAllTags, search } from '../../services/foodService';\nimport Thumbnails from '../../Components/Thumbnails/Thumbnails';\nimport { useParams } from 'react-router-dom';\nimport Search from '../../Components/Search/Search';\nimport Tags from '../../Components/Tags/Tags';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  foods: [],\n  tags: []\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FOODS_LOADED':\n      return {\n        ...state,\n        foods: action.payload\n      };\n    case 'TAGS_LOADED':\n      return {\n        ...state,\n        tags: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default function HomePage() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    foods,\n    tags\n  } = state;\n  const {\n    searchTerm,\n    tag\n  } = useParams();\n  useEffect(() => {\n    getAllTags().then(tags => dispatch({\n      type: 'TAGS_LOADED',\n      payload: tags\n    }));\n    const loadedFoods = tag ? getAllByTag(tag) : searchTerm ? search(searchTerm) : getAll();\n\n    //tag? getAllByTag(tag):\n    //searchTerm ? search(searchTerm) : getAll();\n\n    loadedFoods.then(foods => dispatch({\n      type: 'FOODS_LOADED',\n      payload: foods\n    }));\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Tags, {\n      tags: tags\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Thumbnails, {\n      foods: foods\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(HomePage, \"ZVUnFpqc0eGgRj0iFxlANfpUMu4=\", false, function () {\n  return [useParams];\n});\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useReducer","getAll","getAllByTag","getAllTags","search","Thumbnails","useParams","Search","Tags","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","foods","tags","reducer","state","action","type","payload","HomePage","_s","dispatch","searchTerm","tag","then","loadedFoods","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/MINI_PROJECT_GANESHA/food/src/pages/Home/HomePage.js"],"sourcesContent":["import React, { useEffect, useReducer } from 'react'\r\nimport { getAll, getAllByTag, getAllTags, search} from '../../services/foodService';\r\nimport Thumbnails from '../../Components/Thumbnails/Thumbnails';\r\nimport { useParams } from 'react-router-dom';\r\nimport Search from '../../Components/Search/Search';\r\nimport Tags from '../../Components/Tags/Tags';\r\n\r\nconst initialState = { foods: [], tags: [] };\r\n\r\nconst reducer = (state, action) => {\r\n  switch(action.type){\r\n    case 'FOODS_LOADED':\r\n      return { ...state, foods: action.payload};\r\n    case 'TAGS_LOADED':\r\n      return { ...state, tags: action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function HomePage() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { foods, tags } = state;\r\n  const {searchTerm, tag } = useParams();\r\n\r\n  useEffect(()=> {\r\n    getAllTags().then(tags => dispatch({ type: 'TAGS_LOADED', payload: tags}));\r\n    \r\n    const loadedFoods = tag\r\n    ? getAllByTag(tag)\r\n    : searchTerm\r\n    ? search(searchTerm)\r\n    : getAll();\r\n    \r\n    //tag? getAllByTag(tag):\r\n    //searchTerm ? search(searchTerm) : getAll();\r\n\r\n    loadedFoods.then(foods => dispatch({type:'FOODS_LOADED',payload: foods}));\r\n  }, [searchTerm]);\r\n  return (\r\n    <>\r\n    <Search/>\r\n    <Tags tags={tags}/>\r\n    <Thumbnails foods={foods}/>\r\n      </>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACpD,SAASC,MAAM,EAAEC,WAAW,EAAEC,UAAU,EAAEC,MAAM,QAAO,4BAA4B;AACnF,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,IAAI,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE,EAAE;EAAEC,IAAI,EAAE;AAAG,CAAC;AAE5C,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAOA,MAAM,CAACC,IAAI;IAChB,KAAK,cAAc;MACjB,OAAO;QAAE,GAAGF,KAAK;QAAEH,KAAK,EAAEI,MAAM,CAACE;MAAO,CAAC;IAC3C,KAAK,aAAa;MAChB,OAAO;QAAE,GAAGH,KAAK;QAAEF,IAAI,EAAEG,MAAM,CAACE;MAAO,CAAC;IAC1C;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,eAAe,SAASI,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACL,KAAK,EAAEM,QAAQ,CAAC,GAAGvB,UAAU,CAACgB,OAAO,EAAEH,YAAY,CAAC;EAC3D,MAAM;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGE,KAAK;EAC7B,MAAM;IAACO,UAAU;IAAEC;EAAI,CAAC,GAAGnB,SAAS,CAAC,CAAC;EAEtCP,SAAS,CAAC,MAAK;IACbI,UAAU,CAAC,CAAC,CAACuB,IAAI,CAACX,IAAI,IAAIQ,QAAQ,CAAC;MAAEJ,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAEL;IAAI,CAAC,CAAC,CAAC;IAE1E,MAAMY,WAAW,GAAGF,GAAG,GACrBvB,WAAW,CAACuB,GAAG,CAAC,GAChBD,UAAU,GACVpB,MAAM,CAACoB,UAAU,CAAC,GAClBvB,MAAM,CAAC,CAAC;;IAEV;IACA;;IAEA0B,WAAW,CAACD,IAAI,CAACZ,KAAK,IAAIS,QAAQ,CAAC;MAACJ,IAAI,EAAC,cAAc;MAACC,OAAO,EAAEN;IAAK,CAAC,CAAC,CAAC;EAC3E,CAAC,EAAE,CAACU,UAAU,CAAC,CAAC;EAChB,oBACEd,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACAlB,OAAA,CAACH,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTtB,OAAA,CAACF,IAAI;MAACO,IAAI,EAAEA;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnBtB,OAAA,CAACL,UAAU;MAACS,KAAK,EAAEA;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACvB,CAAC;AAET;AAACV,EAAA,CA1BuBD,QAAQ;EAAA,QAGHf,SAAS;AAAA;AAAA2B,EAAA,GAHdZ,QAAQ;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}